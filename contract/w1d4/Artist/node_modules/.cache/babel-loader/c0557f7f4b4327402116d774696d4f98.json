{"ast":null,"code":"var _jsxFileName = \"/Users/vivi/Documents/Programming/project-flow/flow-dapperstarter-bootcamp/w1d4/Artist/src/pages/Draw/Draw.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport FlowContext from '../../context/Flow.jsx';\nimport Picture from '../../model/Picture.js';\nimport Pixel from '../../model/Pixel.js';\nimport Frame from './Frame.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'setPicture':\n      {\n        return { ...state,\n          picture: action.payload\n        };\n      }\n\n    case 'startLoading':\n      {\n        return { ...state,\n          message: null,\n          isLoading: true\n        };\n      }\n\n    case 'stopLoading':\n      {\n        return { ...state,\n          isLoading: false\n        };\n      }\n\n    case 'setMessage':\n      {\n        return { ...state,\n          message: action.payload,\n          isLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction Draw(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    picture: new Picture(window.sessionStorage.getItem('drawingPicture') || '0000000000000000000000000'),\n    message: null,\n    isLoading: false\n  });\n  const flow = useContext(FlowContext);\n\n  const onTogglePixel = (index, brush) => {\n    dispatch({\n      type: 'setPicture',\n      payload: state.picture.togglePixelAt(index, brush)\n    });\n  };\n\n  const onCreateCollection = async () => {\n    if (!state.isLoading) {\n      dispatch({\n        type: 'startLoading'\n      });\n\n      try {\n        const response = await flow.createCollection();\n\n        if (response.statusCode === 0) {\n          await flow.fetchCollection();\n          dispatch({\n            type: 'stopLoading'\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'setMessage',\n          payload: {\n            type: 'warning',\n            contents: error.toString().replace('Error: ', '')\n          }\n        });\n      }\n    }\n  };\n\n  const onPrint = async () => {\n    if (!state.isLoading) {\n      dispatch({\n        type: 'startLoading'\n      });\n\n      try {\n        const response = await flow.printPicture(state.picture);\n\n        if (response === null) {\n          return dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'warning',\n              contents: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"print.cdc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 28\n                }, this), \" not yet implemented using \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"fcl.send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 77\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)\n            }\n          });\n        }\n\n        const didSucceed = response.events.find(event => event.type.endsWith(`${process.env.REACT_APP_ARTIST_CONTRACT_NAME}.PicturePrintSuccess`));\n        const didFail = response.events.find(event => event.type.endsWith(`${process.env.REACT_APP_ARTIST_CONTRACT_NAME}.PicturePrintFailure`));\n\n        if (didSucceed) {\n          dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'success',\n              contents: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Awesome! This Picture (\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag is-family-monospace\",\n                  children: state.picture.pixels\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 51\n                }, this), \") was added to your \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  children: \"collection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 142\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this)\n            }\n          });\n        } else if (didFail) {\n          dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'warning',\n              contents: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Oops! This Picture (\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag is-family-monospace\",\n                  children: state.picture.pixels\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 48\n                }, this), \") already exists. Try drawing something else.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this)\n            }\n          });\n        } else {}\n\n        if (response.statusCode === 0) {\n          await flow.fetchCollection();\n          dispatch({\n            type: 'stopLoading'\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'setMessage',\n          payload: {\n            type: 'warning',\n            contents: error.toString().replace('Error: ', '')\n          }\n        });\n      }\n    }\n  };\n\n  const onClear = () => {\n    dispatch({\n      type: 'setPicture',\n      payload: new Picture('0000000000000000000000000')\n    });\n  };\n\n  useEffect(() => {\n    window.sessionStorage.setItem('drawingPicture', state.picture.pixels);\n  }, [state.picture]);\n\n  if (flow.state.collection === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"title is-5\",\n        children: \"Draw a Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"block\",\n        children: \"Before you can start drawing, please create a Picture Collection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames({\n          'notification': true,\n          'is-warning': state.message.type === 'warning',\n          'is-success': state.message.type === 'success'\n        }),\n        children: state.message.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control block\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames({\n            'button is-primary': true,\n            'is-loading': state.isLoading\n          }),\n          onClick: onCreateCollection,\n          children: \"Create Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"title is-5\",\n        children: \"Draw a Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(Frame, {\n          pixel: Pixel.full,\n          grid: {\n            rows: 5,\n            columns: 5\n          },\n          picture: state.picture,\n          onTogglePixel: onTogglePixel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames({\n          'notification': true,\n          'is-warning': state.message.type === 'warning'\n        }),\n        children: state.message.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field is-grouped block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames({\n                'button is-primary': true,\n                'is-loading': state.isLoading\n              }),\n              onClick: onPrint,\n              children: \"Print\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: onClear,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block content\",\n        children: [\"Once you're happy with your drawing, you can create a unique NFT (Non-Fungible Token) on the Flow blockchain, just click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 132\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags has-addons block\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag is-dark\",\n          children: \"Pixels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag is-family-monospace\",\n          children: state.picture.pixels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Draw, \"2Sw9kzgqtRW1D1JczWWlgzP9FMA=\");\n\n_c = Draw;\nexport default Draw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"sources":["/Users/vivi/Documents/Programming/project-flow/flow-dapperstarter-bootcamp/w1d4/Artist/src/pages/Draw/Draw.jsx"],"names":["useReducer","useContext","useEffect","classNames","Link","FlowContext","Picture","Pixel","Frame","reducer","state","action","type","picture","payload","message","isLoading","Draw","props","dispatch","window","sessionStorage","getItem","flow","onTogglePixel","index","brush","togglePixelAt","onCreateCollection","response","createCollection","statusCode","fetchCollection","error","contents","toString","replace","onPrint","printPicture","didSucceed","events","find","event","endsWith","process","env","REACT_APP_ARTIST_CONTRACT_NAME","didFail","pixels","onClear","setItem","collection","full","rows","columns"],"mappings":"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","sourcesContent":["import {useReducer, useContext, useEffect} from 'react';\nimport classNames from 'classnames';\nimport {Link} from 'react-router-dom';\n\nimport FlowContext from '../../context/Flow.jsx';\n\nimport Picture from '../../model/Picture.js';\nimport Pixel from '../../model/Pixel.js';\n\nimport Frame from './Frame.jsx';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'setPicture': {\n      return {\n        ...state,\n        picture: action.payload\n      };\n    }\n    case 'startLoading': {\n      return {\n        ...state,\n        message: null,\n        isLoading: true\n      };\n    }\n    case 'stopLoading': {\n      return {\n        ...state,\n        isLoading: false\n      };\n    }\n    case 'setMessage': {\n      return {\n        ...state,\n        message: action.payload,\n        isLoading: false\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction Draw(props) {\n  const [state, dispatch] = useReducer(reducer, {\n    picture: new Picture(window.sessionStorage.getItem('drawingPicture') || '0000000000000000000000000'),\n    message: null,\n    isLoading: false\n  });\n  const flow = useContext(FlowContext);\n\n  const onTogglePixel = (index, brush) => {\n    dispatch({\n      type: 'setPicture',\n      payload: state.picture.togglePixelAt(index, brush)\n    });\n  }\n\n  const onCreateCollection = async () => {\n    if (!state.isLoading) {\n      dispatch({type: 'startLoading'});\n      try {\n        const response = await flow.createCollection();\n        if (response.statusCode === 0) {\n          await flow.fetchCollection();\n          dispatch({type: 'stopLoading'});\n        }\n      } catch (error) {\n        dispatch({\n          type: 'setMessage',\n          payload: {\n            type: 'warning',\n            contents: error.toString().replace('Error: ', '')\n          }\n        });\n      }\n    }\n  };\n  const onPrint = async () => {\n    if (!state.isLoading) {\n      dispatch({type: 'startLoading'});\n      try {\n        const response = await flow.printPicture(state.picture);\n\n        if (response === null) {\n          return dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'warning',\n              contents: <p><code>print.cdc</code> not yet implemented using <code>fcl.send</code>.</p>\n            }\n          });\n        }\n\n        const didSucceed = response.events.find((event) => event.type.endsWith(`${process.env.REACT_APP_ARTIST_CONTRACT_NAME}.PicturePrintSuccess`));\n        const didFail = response.events.find((event) => event.type.endsWith(`${process.env.REACT_APP_ARTIST_CONTRACT_NAME}.PicturePrintFailure`));\n        if (didSucceed) {\n          dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'success',\n              contents: <p>Awesome! This Picture (<span className=\"tag is-family-monospace\">{state.picture.pixels}</span>) was added to your <Link to=\"/\">collection</Link>.</p>\n            }\n          });\n        } else if (didFail) {\n          dispatch({\n            type: 'setMessage',\n            payload: {\n              type: 'warning',\n              contents: <p>Oops! This Picture (<span className=\"tag is-family-monospace\">{state.picture.pixels}</span>) already exists. Try drawing something else.</p>\n            }\n          });\n        } else {\n\n        }\n        if (response.statusCode === 0) {\n          await flow.fetchCollection();\n          dispatch({type: 'stopLoading'});\n        }\n      } catch (error) {\n        dispatch({\n          type: 'setMessage',\n          payload: {\n            type: 'warning',\n            contents: error.toString().replace('Error: ', '')\n          }\n        });\n      }\n    }\n  };\n  const onClear = () => {\n    dispatch({\n      type: 'setPicture',\n      payload: new Picture('0000000000000000000000000')\n    });\n  };\n\n  useEffect(() => {\n    window.sessionStorage.setItem('drawingPicture', state.picture.pixels);\n  }, [state.picture]);\n\n  if (flow.state.collection === null) {\n    return (\n      <div>\n        <h5 className=\"title is-5\">Draw a Picture</h5>\n        <p className=\"block\">\n          Before you can start drawing, please create a Picture Collection.\n        </p>\n        {state.message &&\n          <div\n            className={classNames({\n              'notification': true,\n              'is-warning': state.message.type === 'warning',\n              'is-success': state.message.type === 'success'\n            })}\n          >\n            {state.message.contents}\n          </div>\n        }\n        <div className=\"control block\">\n          <button\n            className={classNames({\n              'button is-primary': true,\n              'is-loading': state.isLoading\n            })}\n            onClick={onCreateCollection}\n          >\n            Create Collection\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h5 className=\"title is-5\">Draw a Picture</h5>\n        <div className=\"block\">\n          <Frame\n            pixel={Pixel.full}\n            grid={{\n              rows: 5,\n              columns: 5\n            }}\n            picture={state.picture}\n            onTogglePixel={onTogglePixel}\n          />\n        </div>\n        {state.message &&\n          <div\n            className={classNames({\n              'notification': true,\n              'is-warning': state.message.type === 'warning'\n            })}\n          >\n            {state.message.contents}\n          </div>\n        }\n        <div className=\"block\">\n          <div className=\"field is-grouped block\">\n            <div className=\"control\">\n              <button\n                className={classNames({\n                  'button is-primary': true,\n                  'is-loading': state.isLoading\n                })}\n                onClick={onPrint}\n              >\n                Print\n              </button>\n            </div>\n            <div className=\"control\">\n              <button\n                className=\"button\"\n                onClick={onClear}\n              >\n                Clear\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"block content\">\n          Once you're happy with your drawing, you can create a unique NFT (Non-Fungible Token) on the Flow blockchain, just click <strong>Print</strong>.\n        </div>\n        <div className=\"tags has-addons block\">\n          <span className=\"tag is-dark\">Pixels</span>\n          <span className=\"tag is-family-monospace\">\n            {state.picture.pixels}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Draw;"]},"metadata":{},"sourceType":"module"}